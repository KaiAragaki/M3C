source('~/Desktop/scripts/AECv11_early.R')
set.seed(12345678)
#res <- M3C(data3,method=2,clusteralg='hc')
#res <- Spectrum::Spectrum(data3)
res <- AEC(data3,weightedgraph=TRUE,stabilitysearch=FALSE)
# reorder data according to any clustering algorithm
ind <- sort(as.vector(res$assignments),index.return=TRUE)
datax <- data3[,ind$ix]
annonx <- meta[ind$ix,]
annonx$consensuscluster <- as.factor(as.character(ind$x))
### optional reordering of consensus clusters manually
reorder <- TRUE
if (reorder){
## reorder consensus clusters manually
newv <- as.factor(c(3,2,1)) # tocil: 2,3,1
annonx <- annonx[order(match(annonx$consensuscluster, newv)),] # reorder clinical
annonx$consensuscluster <- as.character(1:length(newv))[ match(annonx$consensuscluster, as.character(unique(annonx$consensuscluster)) ) ]
#colnames(datax) <- gsub('\\.','-',colnames(datax)) # reformatting
datax <- datax[,annonx$ID] # get in right order -- change for PEAC vs R4RA
}
### statistical analysis
mergeclusters=FALSE
if (mergeclusters==TRUE){
meta2 <- annonx
meta2$consensuscluster <- as.character(meta2$consensuscluster)
merge <- FALSE
if (merge){
meta2$consensuscluster[meta2$consensuscluster=='2'] <- '2/3'
meta2$consensuscluster[meta2$consensuscluster=='3'] <- '2/3'
}
meta2$DAS28.CRP.EULARresp.V7 <- as.character(meta2$DAS28.CRP.EULARresp.V7)
meta2$DAS28.CRP.EULARresp.V7[meta2$DAS28.CRP.EULARresp.V7 == 'Good.Responder'] <- 'Good'
meta2$DAS28.CRP.EULARresp.V7[meta2$DAS28.CRP.EULARresp.V7 == 'Non.Responder'] <- 'Moderate_or_none'
meta2$DAS28.CRP.EULARresp.V7[meta2$DAS28.CRP.EULARresp.V7 == 'Moderate.Responder'] <- 'Moderate_or_none'
# test 1
table(meta2[c('consensuscluster','DAS28.CRP.EULARresp.V7')])
fisher.test(table(meta2[c('consensuscluster','DAS28.CRP.EULARresp.V7')]))
annonx$EULAR3.response <- meta2$DAS28.CRP.EULARresp.V7
# test 2
table(meta2[c('consensuscluster','CDAI.response.status.V7')])
fisher.test(table(meta2[c('consensuscluster','CDAI.response.status.V7')]))
# test 3
table(meta2[c('consensuscluster','Target.CDAI.response.V7')])
fisher.test(table(meta2[c('consensuscluster','Target.CDAI.response.V7')]))
}
### all heatmap
annonx$DAS28.CRP.EULARresp.V7 <- as.character(annonx$DAS28.CRP.EULARresp.V7)
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Good.Responder'] <- 'Good'
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Non.Responder'] <- 'Moderate_or_none'
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Moderate.Responder'] <- 'Moderate_or_none'
annonx$Cell.Type.V2 <- as.character(annonx$Cell.Type.V2)
datax <- t(scale(t(datax))) # scaled
cutoffval <- 2.5
datax <- apply(datax, 2, function(x) ifelse(x > cutoffval, cutoffval, x)) # compress data within range
datax <- apply(datax, 2, function(x) ifelse(x < -cutoffval, -cutoffval, x)) # compress data within range
ann_colors2 <- ggsci::pal_futurama()(4) # futurama palette
chrispal1 <- c('cornflowerblue', 'gold1', 'darkorchid', 'skyblue1', 'plum1', 'violetred', 'forestgreen', 'midnightblue')
library(RColorBrewer)
scale1 <- brewer.pal(6, "YlOrRd")
scale2 <- brewer.pal(6, "YlGnBu")
scale3 <- brewer.pal(6, "RdPu")
scale4 <- brewer.pal(6, "YlGn")
scale5 <- brewer.pal(6, "BuPu")
#datax <- datax[1:50,]
ha2 = HeatmapAnnotation(df = annonx[,c('consensuscluster','Pathotype.V2','Randomised.medication',
'DAS28.CRP.EULARresp.V7','CD20.V2','CD138.V2',
'CD68L.V2','CD68SL.V2','CD3.V2'),drop=FALSE],
simple_anno_size = unit(4, "mm"),
annotation_name_gp = gpar(fontsize = 0),
col = list(consensuscluster = c("1" = chrispal1[1], "2" = chrispal1[2], "3" = chrispal1[3],
"4" = chrispal1[4], "5" = chrispal1[5], "6" = chrispal1[6]),
#Cell.Type.V2 = c('Brich' = '#FF6F00FF', 'Bpoor' = '#C71000FF', 'Unknown' = 'grey', 'GC' = 'blue'),
Pathotype.V2 = c("Lymphoid" = 'firebrick1', "Fibroid" = chrispal1[4], "Myeloid" = chrispal1[5], "Ungraded" = 'grey'),
Randomised.medication = c('Rituximab' = 'red', 'Tocilizumab' = 'blue'),
DAS28.CRP.EULARresp.V7 = c('Good' = 'slateblue1', 'Moderate_or_none' = 'black'),
CD3.V2 = c('0'=scale1[2],'1'=scale1[3],'2'=scale1[4],'3'=scale1[5],'4'=scale1[6]),
CD20.V2 = c('0'=scale2[2],'1'=scale2[3],'2'=scale2[4],'3'=scale2[5],'4'=scale2[6]),
CD68L.V2 = c('0'=scale3[2],'1'=scale3[3],'2'=scale3[4],'3'=scale3[5],'4'=scale3[6]),
CD68SL.V2 = c('0'=scale4[2],'1'=scale4[3],'2'=scale4[4],'3'=scale4[5],'4'=scale4[6]),
CD138.V2 = c('0'=scale5[2],'1'=scale5[3],'2'=scale5[4],'3'=scale5[5],'4'=scale5[6])),
annotation_legend_param = list(consensuscluster = list(title = "Consensus cluster",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
Pathotype.V2 = list(title = "Pathotype",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
#Cell.Type.V2 = list(title = "Cell.type",
#title_gp = gpar(fontface = 'plain', fontsize = '10')),
Randomised.medication = list(title = "Medication",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
DAS28.CRP.EULARresp.V7 = list(title = "EULAR3.response",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD3.V2 = list(title = "CD3.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD20.V2 = list(title = "CD20.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD68L.V2 = list(title = "CD68L.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD68SL.V2 = list(title = "CD68SL.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD138.V2 = list(title = "CD138.max",
title_gp = gpar(fontface = 'plain', fontsize = '10'))))
doheatmap <- TRUE
if (doheatmap){
h <- Heatmap(datax, name = "Norm intensity",
cluster_columns = FALSE, col = gplots::bluered(256),
heatmap_legend_param = list(color_bar = "continuous",
grid_border = NA, title_gp = gpar(fontface = 'plain', fontsize = '10')),
row_names_gp = gpar(fontsize = 10), top_annotation = ha2,
column_names_gp = gpar(fontsize = 0),
clustering_distance_rows = "pearson",
clustering_method_rows = "complete",
row_dend_width = unit(20, "mm"),
show_row_names = FALSE,
show_heatmap_legend = TRUE)
}
h
# reorder data according to any clustering algorithm
ind <- sort(as.vector(res$assignments),index.return=TRUE)
datax <- data3[,ind$ix]
annonx <- meta[ind$ix,]
annonx$consensuscluster <- as.factor(as.character(ind$x))
### optional reordering of consensus clusters manually
reorder <- TRUE
if (reorder){
## reorder consensus clusters manually
newv <- as.factor(c(3,2,1)) # tocil: 2,3,1
annonx <- annonx[order(match(annonx$consensuscluster, newv)),] # reorder clinical
annonx$consensuscluster <- as.character(1:length(newv))[ match(annonx$consensuscluster, as.character(unique(annonx$consensuscluster)) ) ]
#colnames(datax) <- gsub('\\.','-',colnames(datax)) # reformatting
datax <- datax[,annonx$ID] # get in right order -- change for PEAC vs R4RA
}
### statistical analysis
mergeclusters=FALSE
if (mergeclusters==TRUE){
meta2 <- annonx
meta2$consensuscluster <- as.character(meta2$consensuscluster)
merge <- FALSE
if (merge){
meta2$consensuscluster[meta2$consensuscluster=='2'] <- '2/3'
meta2$consensuscluster[meta2$consensuscluster=='3'] <- '2/3'
}
meta2$DAS28.CRP.EULARresp.V7 <- as.character(meta2$DAS28.CRP.EULARresp.V7)
meta2$DAS28.CRP.EULARresp.V7[meta2$DAS28.CRP.EULARresp.V7 == 'Good.Responder'] <- 'Good'
meta2$DAS28.CRP.EULARresp.V7[meta2$DAS28.CRP.EULARresp.V7 == 'Non.Responder'] <- 'Moderate_or_none'
meta2$DAS28.CRP.EULARresp.V7[meta2$DAS28.CRP.EULARresp.V7 == 'Moderate.Responder'] <- 'Moderate_or_none'
# test 1
table(meta2[c('consensuscluster','DAS28.CRP.EULARresp.V7')])
fisher.test(table(meta2[c('consensuscluster','DAS28.CRP.EULARresp.V7')]))
annonx$EULAR3.response <- meta2$DAS28.CRP.EULARresp.V7
# test 2
table(meta2[c('consensuscluster','CDAI.response.status.V7')])
fisher.test(table(meta2[c('consensuscluster','CDAI.response.status.V7')]))
# test 3
table(meta2[c('consensuscluster','Target.CDAI.response.V7')])
fisher.test(table(meta2[c('consensuscluster','Target.CDAI.response.V7')]))
}
### all heatmap
annonx$DAS28.CRP.EULARresp.V7 <- as.character(annonx$DAS28.CRP.EULARresp.V7)
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Good.Responder'] <- 'Good'
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Non.Responder'] <- 'Moderate_or_none'
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Moderate.Responder'] <- 'Moderate_or_none'
annonx$Cell.Type.V2 <- as.character(annonx$Cell.Type.V2)
datax <- t(scale(t(datax))) # scaled
cutoffval <- 2.5
#datax <- apply(datax, 2, function(x) ifelse(x > cutoffval, cutoffval, x)) # compress data within range
#datax <- apply(datax, 2, function(x) ifelse(x < -cutoffval, -cutoffval, x)) # compress data within range
ann_colors2 <- ggsci::pal_futurama()(4) # futurama palette
chrispal1 <- c('cornflowerblue', 'gold1', 'darkorchid', 'skyblue1', 'plum1', 'violetred', 'forestgreen', 'midnightblue')
library(RColorBrewer)
scale1 <- brewer.pal(6, "YlOrRd")
scale2 <- brewer.pal(6, "YlGnBu")
scale3 <- brewer.pal(6, "RdPu")
scale4 <- brewer.pal(6, "YlGn")
scale5 <- brewer.pal(6, "BuPu")
#datax <- datax[1:50,]
ha2 = HeatmapAnnotation(df = annonx[,c('consensuscluster','Pathotype.V2','Randomised.medication',
'DAS28.CRP.EULARresp.V7','CD20.V2','CD138.V2',
'CD68L.V2','CD68SL.V2','CD3.V2'),drop=FALSE],
simple_anno_size = unit(4, "mm"),
annotation_name_gp = gpar(fontsize = 0),
col = list(consensuscluster = c("1" = chrispal1[1], "2" = chrispal1[2], "3" = chrispal1[3],
"4" = chrispal1[4], "5" = chrispal1[5], "6" = chrispal1[6]),
#Cell.Type.V2 = c('Brich' = '#FF6F00FF', 'Bpoor' = '#C71000FF', 'Unknown' = 'grey', 'GC' = 'blue'),
Pathotype.V2 = c("Lymphoid" = 'firebrick1', "Fibroid" = chrispal1[4], "Myeloid" = chrispal1[5], "Ungraded" = 'grey'),
Randomised.medication = c('Rituximab' = 'red', 'Tocilizumab' = 'blue'),
DAS28.CRP.EULARresp.V7 = c('Good' = 'slateblue1', 'Moderate_or_none' = 'black'),
CD3.V2 = c('0'=scale1[2],'1'=scale1[3],'2'=scale1[4],'3'=scale1[5],'4'=scale1[6]),
CD20.V2 = c('0'=scale2[2],'1'=scale2[3],'2'=scale2[4],'3'=scale2[5],'4'=scale2[6]),
CD68L.V2 = c('0'=scale3[2],'1'=scale3[3],'2'=scale3[4],'3'=scale3[5],'4'=scale3[6]),
CD68SL.V2 = c('0'=scale4[2],'1'=scale4[3],'2'=scale4[4],'3'=scale4[5],'4'=scale4[6]),
CD138.V2 = c('0'=scale5[2],'1'=scale5[3],'2'=scale5[4],'3'=scale5[5],'4'=scale5[6])),
annotation_legend_param = list(consensuscluster = list(title = "Consensus cluster",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
Pathotype.V2 = list(title = "Pathotype",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
#Cell.Type.V2 = list(title = "Cell.type",
#title_gp = gpar(fontface = 'plain', fontsize = '10')),
Randomised.medication = list(title = "Medication",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
DAS28.CRP.EULARresp.V7 = list(title = "EULAR3.response",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD3.V2 = list(title = "CD3.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD20.V2 = list(title = "CD20.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD68L.V2 = list(title = "CD68L.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD68SL.V2 = list(title = "CD68SL.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD138.V2 = list(title = "CD138.max",
title_gp = gpar(fontface = 'plain', fontsize = '10'))))
doheatmap <- TRUE
if (doheatmap){
h <- Heatmap(datax, name = "Norm intensity",
cluster_columns = FALSE, col = gplots::bluered(256),
heatmap_legend_param = list(color_bar = "continuous",
grid_border = NA, title_gp = gpar(fontface = 'plain', fontsize = '10')),
row_names_gp = gpar(fontsize = 10), top_annotation = ha2,
column_names_gp = gpar(fontsize = 0),
clustering_distance_rows = "pearson",
clustering_method_rows = "complete",
row_dend_width = unit(20, "mm"),
show_row_names = FALSE,
show_heatmap_legend = TRUE)
}
h
setwd("~/Desktop/")
#png('baseline_clustering_all_unsupervised_V4_trimmed.png', height = 20, width = 21, units = 'cm',
#    res = 900, typ = 'cairo')
#draw(h, heatmap_legend_side = 'left', annotation_legend_side = 'bottom')
#dev.off()
### clinical analysis
## all
table(annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')])
fisher.test(table(annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')]))
## individual
annonx$Current.Medication <- as.character(annonx$Current.Medication)
r_annonx <- subset(annonx, annonx$Current.Medication == 'Rituximab')
t_annonx <- subset(annonx, annonx$Current.Medication == 'Tocilizumab')
# check sizes of clusters for both treatment groups
# need as similar sizes as possible really
table(r_annonx$consensuscluster)
table(t_annonx$consensuscluster)
## ritux testing
## EULAR CRP
table(r_annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')])
fisher.test(table(r_annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')]))
setwd("~/Desktop/")
#png('baseline_clustering_all_unsupervised_V4_trimmed.png', height = 20, width = 21, units = 'cm',
#    res = 900, typ = 'cairo')
#draw(h, heatmap_legend_side = 'left', annotation_legend_side = 'bottom')
#dev.off()
### clinical analysis
## all
table(annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')])
fisher.test(table(annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')]))
## individual
annonx$Current.Medication <- as.character(annonx$Current.Medication)
r_annonx <- subset(annonx, annonx$Current.Medication == 'Rituximab')
t_annonx <- subset(annonx, annonx$Current.Medication == 'Tocilizumab')
# check sizes of clusters for both treatment groups
# need as similar sizes as possible really
table(r_annonx$consensuscluster)
table(t_annonx$consensuscluster)
## ritux testing
## EULAR CRP
table(r_annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')])
fisher.test(table(r_annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')]))
table(t_annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')])
fisher.test(table(t_annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')]))
#source('~/Desktop/scripts/AEC_early.R')
source('~/Desktop/scripts/AECv11_early.R')
set.seed(12345678)
#res <- M3C(data3,method=2,clusteralg='hc')
res <- Spectrum::Spectrum(data3)
#res <- AEC(data3,weightedgraph=TRUE,stabilitysearch=FALSE)
# reorder data according to any clustering algorithm
ind <- sort(as.vector(res$assignments),index.return=TRUE)
datax <- data3[,ind$ix]
annonx <- meta[ind$ix,]
annonx$consensuscluster <- as.factor(as.character(ind$x))
mergeclusters=FALSE
if (mergeclusters==TRUE){
meta2 <- annonx
meta2$consensuscluster <- as.character(meta2$consensuscluster)
merge <- FALSE
if (merge){
meta2$consensuscluster[meta2$consensuscluster=='2'] <- '2/3'
meta2$consensuscluster[meta2$consensuscluster=='3'] <- '2/3'
}
meta2$DAS28.CRP.EULARresp.V7 <- as.character(meta2$DAS28.CRP.EULARresp.V7)
meta2$DAS28.CRP.EULARresp.V7[meta2$DAS28.CRP.EULARresp.V7 == 'Good.Responder'] <- 'Good'
meta2$DAS28.CRP.EULARresp.V7[meta2$DAS28.CRP.EULARresp.V7 == 'Non.Responder'] <- 'Moderate_or_none'
meta2$DAS28.CRP.EULARresp.V7[meta2$DAS28.CRP.EULARresp.V7 == 'Moderate.Responder'] <- 'Moderate_or_none'
# test 1
table(meta2[c('consensuscluster','DAS28.CRP.EULARresp.V7')])
fisher.test(table(meta2[c('consensuscluster','DAS28.CRP.EULARresp.V7')]))
annonx$EULAR3.response <- meta2$DAS28.CRP.EULARresp.V7
# test 2
table(meta2[c('consensuscluster','CDAI.response.status.V7')])
fisher.test(table(meta2[c('consensuscluster','CDAI.response.status.V7')]))
# test 3
table(meta2[c('consensuscluster','Target.CDAI.response.V7')])
fisher.test(table(meta2[c('consensuscluster','Target.CDAI.response.V7')]))
}
### all heatmap
annonx$DAS28.CRP.EULARresp.V7 <- as.character(annonx$DAS28.CRP.EULARresp.V7)
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Good.Responder'] <- 'Good'
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Non.Responder'] <- 'Moderate_or_none'
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Moderate.Responder'] <- 'Moderate_or_none'
annonx$Cell.Type.V2 <- as.character(annonx$Cell.Type.V2)
datax <- t(scale(t(datax))) # scaled
cutoffval <- 2.5
#datax <- apply(datax, 2, function(x) ifelse(x > cutoffval, cutoffval, x)) # compress data within range
#datax <- apply(datax, 2, function(x) ifelse(x < -cutoffval, -cutoffval, x)) # compress data within range
ann_colors2 <- ggsci::pal_futurama()(4) # futurama palette
chrispal1 <- c('cornflowerblue', 'gold1', 'darkorchid', 'skyblue1', 'plum1', 'violetred', 'forestgreen', 'midnightblue')
library(RColorBrewer)
scale1 <- brewer.pal(6, "YlOrRd")
scale2 <- brewer.pal(6, "YlGnBu")
scale3 <- brewer.pal(6, "RdPu")
scale4 <- brewer.pal(6, "YlGn")
scale5 <- brewer.pal(6, "BuPu")
#datax <- datax[1:50,]
ha2 = HeatmapAnnotation(df = annonx[,c('consensuscluster','Pathotype.V2','Randomised.medication',
'DAS28.CRP.EULARresp.V7','CD20.V2','CD138.V2',
'CD68L.V2','CD68SL.V2','CD3.V2'),drop=FALSE],
simple_anno_size = unit(4, "mm"),
annotation_name_gp = gpar(fontsize = 0),
col = list(consensuscluster = c("1" = chrispal1[1], "2" = chrispal1[2], "3" = chrispal1[3],
"4" = chrispal1[4], "5" = chrispal1[5], "6" = chrispal1[6]),
#Cell.Type.V2 = c('Brich' = '#FF6F00FF', 'Bpoor' = '#C71000FF', 'Unknown' = 'grey', 'GC' = 'blue'),
Pathotype.V2 = c("Lymphoid" = 'firebrick1', "Fibroid" = chrispal1[4], "Myeloid" = chrispal1[5], "Ungraded" = 'grey'),
Randomised.medication = c('Rituximab' = 'red', 'Tocilizumab' = 'blue'),
DAS28.CRP.EULARresp.V7 = c('Good' = 'slateblue1', 'Moderate_or_none' = 'black'),
CD3.V2 = c('0'=scale1[2],'1'=scale1[3],'2'=scale1[4],'3'=scale1[5],'4'=scale1[6]),
CD20.V2 = c('0'=scale2[2],'1'=scale2[3],'2'=scale2[4],'3'=scale2[5],'4'=scale2[6]),
CD68L.V2 = c('0'=scale3[2],'1'=scale3[3],'2'=scale3[4],'3'=scale3[5],'4'=scale3[6]),
CD68SL.V2 = c('0'=scale4[2],'1'=scale4[3],'2'=scale4[4],'3'=scale4[5],'4'=scale4[6]),
CD138.V2 = c('0'=scale5[2],'1'=scale5[3],'2'=scale5[4],'3'=scale5[5],'4'=scale5[6])),
annotation_legend_param = list(consensuscluster = list(title = "Consensus cluster",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
Pathotype.V2 = list(title = "Pathotype",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
#Cell.Type.V2 = list(title = "Cell.type",
#title_gp = gpar(fontface = 'plain', fontsize = '10')),
Randomised.medication = list(title = "Medication",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
DAS28.CRP.EULARresp.V7 = list(title = "EULAR3.response",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD3.V2 = list(title = "CD3.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD20.V2 = list(title = "CD20.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD68L.V2 = list(title = "CD68L.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD68SL.V2 = list(title = "CD68SL.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD138.V2 = list(title = "CD138.max",
title_gp = gpar(fontface = 'plain', fontsize = '10'))))
doheatmap <- TRUE
setwd("~/Desktop/")
#png('baseline_clustering_all_unsupervised_V4_trimmed.png', height = 20, width = 21, units = 'cm',
#    res = 900, typ = 'cairo')
#draw(h, heatmap_legend_side = 'left', annotation_legend_side = 'bottom')
#dev.off()
### clinical analysis
## all
table(annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')])
fisher.test(table(annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')]))
## individual
annonx$Current.Medication <- as.character(annonx$Current.Medication)
r_annonx <- subset(annonx, annonx$Current.Medication == 'Rituximab')
t_annonx <- subset(annonx, annonx$Current.Medication == 'Tocilizumab')
# check sizes of clusters for both treatment groups
# need as similar sizes as possible really
table(r_annonx$consensuscluster)
table(t_annonx$consensuscluster)
## ritux testing
## EULAR CRP
table(r_annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')])
fisher.test(table(r_annonx[c('consensuscluster','DAS28.CRP.EULARresp.V7')]))
xxx <- featurefilter(data2,method='var',percentile=40)
names <- row.names(xxx$filtered_data)
xxx <- featurefilter(data2,method='var',percentile=40)
names <- row.names(xxx$filtered_data)
data3 <- subset(data2, row.names(data2) %in% names)
nrow(data3)
#colnames(meta)[43] <- 'ID'
colnames(meta)[colnames(meta)=='Seq_ID.V2'] <- 'ID'
### clustering
#source('~/Desktop/scripts/AEC_early.R')
source('~/Desktop/scripts/AECv11_early.R')
set.seed(12345678)
#res <- M3C(data3,method=2,clusteralg='hc')
#res <- Spectrum::Spectrum(data3)
res <- AEC(data3,weightedgraph=TRUE,stabilitysearch=FALSE)
#colnames(meta)[43] <- 'ID'
colnames(meta)[colnames(meta)=='Seq_ID.V2'] <- 'ID'
### clustering
#source('~/Desktop/scripts/AEC_early.R')
source('~/Desktop/scripts/AECv11_early.R')
set.seed(12345678)
#res <- M3C(data3,method=2,clusteralg='hc')
#res <- Spectrum::Spectrum(data3)
res <- AEC(data3,weightedgraph=TRUE,stabilitysearch=FALSE)
#colnames(meta)[43] <- 'ID'
colnames(meta)[colnames(meta)=='Seq_ID.V2'] <- 'ID'
### clustering
#source('~/Desktop/scripts/AEC_early.R')
source('~/Desktop/scripts/AECv11_early.R')
set.seed(12345678)
#res <- M3C(data3,method=2,clusteralg='hc')
#res <- Spectrum::Spectrum(data3)
res <- AEC(data3,weightedgraph=TRUE,stabilitysearch=FALSE)
# reorder data according to any clustering algorithm
ind <- sort(as.vector(res$assignments),index.return=TRUE)
datax <- data3[,ind$ix]
annonx <- meta[ind$ix,]
annonx$consensuscluster <- as.factor(as.character(ind$x))
annonx$DAS28.CRP.EULARresp.V7 <- as.character(annonx$DAS28.CRP.EULARresp.V7)
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Good.Responder'] <- 'Good'
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Non.Responder'] <- 'Moderate_or_none'
annonx$DAS28.CRP.EULARresp.V7[annonx$DAS28.CRP.EULARresp.V7 == 'Moderate.Responder'] <- 'Moderate_or_none'
annonx$Cell.Type.V2 <- as.character(annonx$Cell.Type.V2)
datax <- t(scale(t(datax))) # scaled
cutoffval <- 2.5
#datax <- apply(datax, 2, function(x) ifelse(x > cutoffval, cutoffval, x)) # compress data within range
#datax <- apply(datax, 2, function(x) ifelse(x < -cutoffval, -cutoffval, x)) # compress data within range
ann_colors2 <- ggsci::pal_futurama()(4) # futurama palette
chrispal1 <- c('cornflowerblue', 'gold1', 'darkorchid', 'skyblue1', 'plum1', 'violetred', 'forestgreen', 'midnightblue')
library(RColorBrewer)
scale1 <- brewer.pal(6, "YlOrRd")
scale2 <- brewer.pal(6, "YlGnBu")
scale3 <- brewer.pal(6, "RdPu")
scale4 <- brewer.pal(6, "YlGn")
scale5 <- brewer.pal(6, "BuPu")
#datax <- datax[1:50,]
ha2 = HeatmapAnnotation(df = annonx[,c('consensuscluster','Pathotype.V2','Randomised.medication',
'DAS28.CRP.EULARresp.V7','CD20.V2','CD138.V2',
'CD68L.V2','CD68SL.V2','CD3.V2'),drop=FALSE],
simple_anno_size = unit(4, "mm"),
annotation_name_gp = gpar(fontsize = 0),
col = list(consensuscluster = c("1" = chrispal1[1], "2" = chrispal1[2], "3" = chrispal1[3],
"4" = chrispal1[4], "5" = chrispal1[5], "6" = chrispal1[6]),
#Cell.Type.V2 = c('Brich' = '#FF6F00FF', 'Bpoor' = '#C71000FF', 'Unknown' = 'grey', 'GC' = 'blue'),
Pathotype.V2 = c("Lymphoid" = 'firebrick1', "Fibroid" = chrispal1[4], "Myeloid" = chrispal1[5], "Ungraded" = 'grey'),
Randomised.medication = c('Rituximab' = 'red', 'Tocilizumab' = 'blue'),
DAS28.CRP.EULARresp.V7 = c('Good' = 'slateblue1', 'Moderate_or_none' = 'black'),
CD3.V2 = c('0'=scale1[2],'1'=scale1[3],'2'=scale1[4],'3'=scale1[5],'4'=scale1[6]),
CD20.V2 = c('0'=scale2[2],'1'=scale2[3],'2'=scale2[4],'3'=scale2[5],'4'=scale2[6]),
CD68L.V2 = c('0'=scale3[2],'1'=scale3[3],'2'=scale3[4],'3'=scale3[5],'4'=scale3[6]),
CD68SL.V2 = c('0'=scale4[2],'1'=scale4[3],'2'=scale4[4],'3'=scale4[5],'4'=scale4[6]),
CD138.V2 = c('0'=scale5[2],'1'=scale5[3],'2'=scale5[4],'3'=scale5[5],'4'=scale5[6])),
annotation_legend_param = list(consensuscluster = list(title = "Consensus cluster",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
Pathotype.V2 = list(title = "Pathotype",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
#Cell.Type.V2 = list(title = "Cell.type",
#title_gp = gpar(fontface = 'plain', fontsize = '10')),
Randomised.medication = list(title = "Medication",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
DAS28.CRP.EULARresp.V7 = list(title = "EULAR3.response",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD3.V2 = list(title = "CD3.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD20.V2 = list(title = "CD20.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD68L.V2 = list(title = "CD68L.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD68SL.V2 = list(title = "CD68SL.max",
title_gp = gpar(fontface = 'plain', fontsize = '10')),
CD138.V2 = list(title = "CD138.max",
title_gp = gpar(fontface = 'plain', fontsize = '10'))))
doheatmap <- TRUE
Heatmap(datax, name = "Norm intensity",
cluster_columns = FALSE, col = gplots::bluered(256),
heatmap_legend_param = list(color_bar = "continuous",
grid_border = NA, title_gp = gpar(fontface = 'plain', fontsize = '10')),
row_names_gp = gpar(fontsize = 10), top_annotation = ha2,
column_names_gp = gpar(fontsize = 0),
clustering_distance_rows = "pearson",
clustering_method_rows = "complete",
row_dend_width = unit(20, "mm"),
show_row_names = FALSE,
show_heatmap_legend = TRUE)
source('~/M3C/R/featurefilter.R')
library(M3C)
source('~/M3C/R/featurefilter.R')
x<-featurefilter(mydata,method='MAD')
source('~/M3C/R/featurefilter.R')
x<-featurefilter(mydata,method='MAD')
plot(x$statistics$var,x$statistics$MAD)
source('~/M3C/R/featurefilter.R')
x<-featurefilter(mydata,method='MAD')
setwd("~/M3C")
devtools::document()
devtools::install()
library(M3C)
featurefilter(mydata,method='MAD')
x<-featurefilter(mydata,method='MAD')
x<-featurefilter(mydata,method='MAD',topN=5)
source('~/M3C/R/featurefilter.R')
x<-featurefilter(mydata,method='MAD',topN=5)
library(DESeq2)
library(dplyr)
library(qusage)
library(edgeR)
source('~/Desktop/R4RA/SCRIPTS/reformat_IDs_functions.R')
load("/home/christopher/Desktop/R4RA/R4RA_V2_data_trimmed.RData")
voon
voom
sessionInfo()
